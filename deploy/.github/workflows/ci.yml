name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping || exit 1" \
          --health-interval 5s \
          --health-timeout 3s \
          --health-retries 20

    env:
      USE_EMULATORS: "1"
      GOOGLE_CLOUD_PROJECT: local-dev
      EMULATOR_REDIS_URL: redis://127.0.0.1:6379
      FIRESTORE_EMULATOR_HOST: 127.0.0.1:8200

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('server/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r server/requirements.txt
          pip install flake8

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Firebase CLI
        run: |
          npm install -g firebase-tools

      - name: Start Firestore emulator
        run: |
          nohup firebase emulators:start --only firestore --project $GOOGLE_CLOUD_PROJECT \
            --host $(echo $FIRESTORE_EMULATOR_HOST | cut -d: -f1) \
            --port $(echo $FIRESTORE_EMULATOR_HOST | cut -d: -f2) >/tmp/firestore.log 2>&1 &
          for i in {1..40}; do
            if curl -s "http://$FIRESTORE_EMULATOR_HOST" >/dev/null 2>&1; then
              echo "Firestore emulator ready"
              break
            fi
            sleep 0.5
          done
          echo "Emulator logs:"
          tail -n +1 /tmp/firestore.log | sed -n '1,120p' || true

      - name: Lint
        run: |
          flake8 --version
          # Lint only our python directories if present
          flake8 apps || true
          flake8 server || true
          flake8 src || true

      - name: Run unit tests
        env:
          PYTHONPATH: .
        run: |
          pytest -q --disable-warnings --maxfail=1


